 /* Preparing the Table and Entering the Data*/
 
-- Create Table EmployeeDemographics 
--(EmployeeID int, 
--FirstName varchar(50), 
--LastName varchar(50), 
--Age int, 
--Gender varchar(50)
--)

--Create Table EmployeeSalary 
--(EmployeeID int, 
--JobTitle varchar(50), 
--Salary int
--)

--Insert into EmployeeDemographics VALUES
--(1001, 'Jim', 'Halpert', 30, 'Male'),
--(1002, 'Pam', 'Beasley', 30, 'Female'),
--(1003, 'Dwight', 'Schrute', 29, 'Male'),
--(1004, 'Angela', 'Martin', 31, 'Female'),
--(1005, 'Toby', 'Flenderson', 32, 'Male'),
--(1006, 'Michael', 'Scott', 35, 'Male'),
--(1007, 'Meredith', 'Palmer', 32, 'Female'),
--(1008, 'Stanley', 'Hudson', 38, 'Male'),
--(1009, 'Kevin', 'Malone', 31, 'Male')

--Insert Into EmployeeSalary VALUES
--(1001, 'Salesman', 45000),
--(1002, 'Receptionist', 36000),
--(1003, 'Salesman', 63000),
--(1004, 'Accountant', 47000),
--(1005, 'HR', 50000),
--(1006, 'Regional Manager', 65000),
--(1007, 'Supplier Relations', 41000),
--(1008, 'Salesman', 48000),
--(1009, 'Accountant', 42000)

----------------------------------------------------------------------

/*Select Statement
Top 5* (or any numberand a *) Count, As, Max, Min, Avg */

--SELECT COUNT(LastName)
--FROM EmployeeDemographics

--SELECT COUNT(LastName) AS LastNameCount123
--FROM EmployeeDemographics

/* The AS allows one to rename a newly created selection*/

--SELECT DISTINCT(EmployeeID)
--FROM EmployeeDemographics

/*Returns distinct values in a culumn*/

--SELECT MAX(Salary)
--FROM EmployeeSalary

/*Returns the value generated by the operator.  MAX, MIN, AVG */

--SELECT * 
--FROM EmployeeSalary

----------------------------------------------------------------------

/* Where Statement */
/* =, <>, <, >, And, Or, Like, Null, Not Null, in */

--SELECT * 
--FROM EmployeeDemographics
--Where FirstName = 'Jim'

/*Returns a specific value in a row */

--SELECT * 
--FROM EmployeeDemographics
--Where FirstName <> 'Jim'

/*Returns all values in a row except a specified value*/

--SELECT * 
--FROM EmployeeDemographics
--Where Age > 30

/*Returns all ages greater than 30 years old*.  The  operators can be combined to obtain
varied results */

--SELECT * 
--FROM EmployeeDemographics
--Where Age < = 32 AND Gender = 'Male'

/*The  operators can be combined to obtain varied results */

--SELECT * 
--FROM EmployeeDemographics
--Where LastName LIKE 'S%ot%'

/* In this example, the LIKE statement returned a name of Scott from the EmployeeDemographics table. */

--SELECT * 
--FROM EmployeeDemographics
--Where FirstName is NULL

/* The NULL statement return no values.  Where no values are entered into a database field. */

--SELECT * 
--FROM EmployeeDemographics
--WHERE FirstName IN ('Jim', 'Pam', 'Kevin', 'Toby')

/*The IN statement allows a selection of specific records in a field*/

----------------------------------------------------------------------

/*Group By, Order By*/

--SELECT Gender
--FROM EmployeeDemographics
--GROUP BY Gender

--SELECT * 
--FROM EmployeeDemographics

--SELECT Gender, Age, COUNT(Gender)
--FROM EmployeeDemographics
--WHERE Age > 31
--GROUP BY Gender, Age

/*Counting the nubmer of males and females in a table, based on additional criteria.*/

--SELECT * 
--FROM EmployeeDemographics
--ORDER BY Age, Gender DESC

--SELECT Gender, COUNT(Gender) AS CountGender
--FROM EmployeeDemographics
--WHERE Age > 31
--GROUP BY Gender
--ORDER BY CountGender ASC

----------------------------------------------------------------------

